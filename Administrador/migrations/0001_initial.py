# Generated by Django 4.2 on 2023-05-02 17:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('descripcion', models.TextField()),
                ('ruta', models.CharField(max_length=256)),
                ('interna', models.BooleanField(default=False, help_text='Señala si la categoria es de uso interno por lo que los scripts de automatizacion no la deben borrar', verbose_name='interna')),
            ],
            options={
                'verbose_name': 'categoria',
                'verbose_name_plural': 'categorias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('valor', models.CharField(max_length=256)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='ultima actualizacion')),
            ],
            options={
                'verbose_name': 'configuracion',
                'verbose_name_plural': 'configuraciones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'departamento',
                'verbose_name_plural': 'departamentos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'equipo',
                'verbose_name_plural': 'equipos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ExtensionArchivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(max_length=256)),
                ('actualizaciones', models.BooleanField(default=False, help_text='Señala si la extension del archivo se debe permitir durante el modo de actualización', verbose_name='actualizaciones')),
            ],
            options={
                'verbose_name': 'extension de archivo',
                'verbose_name_plural': 'extensiones de archivos',
                'ordering': ['extension'],
            },
        ),
        migrations.CreateModel(
            name='SitioPermanentementeDenegado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'sitio permanentemente denegado',
                'verbose_name_plural': 'sitios permanentemente denegados',
                'ordering': ['dominio'],
            },
        ),
        migrations.CreateModel(
            name='SitioPermanentementePermitido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'sitio permanentemente permitido',
                'verbose_name_plural': 'sitios permanentemente permitidos',
                'ordering': ['dominio'],
            },
        ),
        migrations.CreateModel(
            name='TipoMime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime', models.CharField(max_length=256, verbose_name='MIME')),
                ('actualizaciones', models.BooleanField(default=False, help_text='Señala si el tipo de MIME se debe permitir durante el modo actualización', verbose_name='actualizaciones')),
            ],
            options={
                'verbose_name': 'tipo de MIME',
                'verbose_name_plural': 'tipos de MIME',
                'ordering': ['mime'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('activo', models.BooleanField(default=True)),
                ('comentario', models.TextField(blank=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.departamento')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Sitio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.categoria')),
            ],
            options={
                'verbose_name': 'sitio',
                'verbose_name_plural': 'sitios',
                'ordering': ['dominio'],
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('filtrar', models.BooleanField(default=True, help_text='Señala si el nivel debe ser procesado por el filtro de sitios web.', verbose_name='filtrar')),
                ('sinaccesoainternet', models.BooleanField(default=False, help_text='Señala si el nivel no tiene permitido acceder a ningun sitio de internet', verbose_name='sin acceso a internet')),
                ('actualizaciones', models.BooleanField(default=True, help_text='Señala si el nivel puede entrar en modo de actualización', verbose_name='actualizaciones')),
                ('lista_blanca', models.BooleanField(default=False, help_text='Señala si el nivel debe evaluar los filtros como una lista blanca', verbose_name='lista blanca')),
                ('categorias', models.ManyToManyField(blank=True, to='Administrador.categoria', verbose_name='categorias')),
                ('extensiones_archivos', models.ManyToManyField(blank=True, to='Administrador.extensionarchivo', verbose_name='extensiones de archivos')),
                ('tipos_mime', models.ManyToManyField(blank=True, to='Administrador.tipomime', verbose_name='tipos de MIME')),
            ],
            options={
                'verbose_name': 'nivel',
                'verbose_name_plural': 'niveles',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalUsuario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('activo', models.BooleanField(default=True)),
                ('comentario', models.TextField(blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('departamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.departamento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical usuario',
                'verbose_name_plural': 'historical usuarios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoMime',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('mime', models.CharField(max_length=256, verbose_name='MIME')),
                ('actualizaciones', models.BooleanField(default=False, help_text='Señala si el tipo de MIME se debe permitir durante el modo actualización', verbose_name='actualizaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tipo de MIME',
                'verbose_name_plural': 'historical tipos de MIME',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitioPermanentementePermitido',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitio permanentemente permitido',
                'verbose_name_plural': 'historical sitios permanentemente permitidos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSitioPermanentementeDenegado',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sitio permanentemente denegado',
                'verbose_name_plural': 'historical sitios permanentemente denegados',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNivel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('filtrar', models.BooleanField(default=True, help_text='Señala si el nivel debe ser procesado por el filtro de sitios web.', verbose_name='filtrar')),
                ('sinaccesoainternet', models.BooleanField(default=False, help_text='Señala si el nivel no tiene permitido acceder a ningun sitio de internet', verbose_name='sin acceso a internet')),
                ('actualizaciones', models.BooleanField(default=True, help_text='Señala si el nivel puede entrar en modo de actualización', verbose_name='actualizaciones')),
                ('lista_blanca', models.BooleanField(default=False, help_text='Señala si el nivel debe evaluar los filtros como una lista blanca', verbose_name='lista blanca')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical nivel',
                'verbose_name_plural': 'historical niveles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExtensionArchivo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extension', models.CharField(max_length=256)),
                ('actualizaciones', models.BooleanField(default=False, help_text='Señala si la extension del archivo se debe permitir durante el modo de actualización', verbose_name='actualizaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical extension de archivo',
                'verbose_name_plural': 'historical extensiones de archivos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEquipo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical equipo',
                'verbose_name_plural': 'historical equipos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDepartamento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical departamento',
                'verbose_name_plural': 'historical departamentos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConfiguracion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('valor', models.CharField(max_length=256)),
                ('ultima_actualizacion', models.DateTimeField(blank=True, editable=False, verbose_name='ultima actualizacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical configuracion',
                'verbose_name_plural': 'historical configuraciones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCategoria',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('descripcion', models.TextField()),
                ('ruta', models.CharField(max_length=256)),
                ('interna', models.BooleanField(default=False, help_text='Señala si la categoria es de uso interno por lo que los scripts de automatizacion no la deben borrar', verbose_name='interna')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical categoria',
                'verbose_name_plural': 'historical categorias',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsignacionTemporalUsuario',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name='fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name='fecha de expiracion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.usuario')),
            ],
            options={
                'verbose_name': 'historical asignacion temporal del usuario',
                'verbose_name_plural': 'historical asignaciones temporales de los usuarios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsignacionTemporalDepartamento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name='fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name='fecha de expiracion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('departamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.departamento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical asignacion temporal del departamento',
                'verbose_name_plural': 'historical asignaciones temporales por departamento',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAsignacion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre_equipo', models.CharField(blank=True, help_text='Nombre del equipo o Hostname. Ejemplo: PC1, MAC2, IMP3, SRV4, etc.', max_length=256, verbose_name='nombre del equipo')),
                ('tipo_conexion', models.PositiveSmallIntegerField(choices=[(0, 'Otro'), (1, 'Lan'), (2, 'Wlan')], default=1, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='tipo de conexion')),
                ('ip', models.PositiveSmallIntegerField(choices=[(1, '192.168.2.1'), (2, '192.168.2.2'), (3, '192.168.2.3'), (4, '192.168.2.4'), (5, '192.168.2.5'), (6, '192.168.2.6'), (7, '192.168.2.7'), (8, '192.168.2.8'), (9, '192.168.2.9'), (10, '192.168.2.10'), (11, '192.168.2.11'), (12, '192.168.2.12'), (13, '192.168.2.13'), (14, '192.168.2.14'), (15, '192.168.2.15'), (16, '192.168.2.16'), (17, '192.168.2.17'), (18, '192.168.2.18'), (19, '192.168.2.19'), (20, '192.168.2.20'), (21, '192.168.2.21'), (22, '192.168.2.22'), (23, '192.168.2.23'), (24, '192.168.2.24'), (25, '192.168.2.25'), (26, '192.168.2.26'), (27, '192.168.2.27'), (28, '192.168.2.28'), (29, '192.168.2.29'), (30, '192.168.2.30'), (31, '192.168.2.31'), (32, '192.168.2.32'), (33, '192.168.2.33'), (34, '192.168.2.34'), (35, '192.168.2.35'), (36, '192.168.2.36'), (37, '192.168.2.37'), (38, '192.168.2.38'), (39, '192.168.2.39'), (40, '192.168.2.40'), (41, '192.168.2.41'), (42, '192.168.2.42'), (43, '192.168.2.43'), (44, '192.168.2.44'), (45, '192.168.2.45'), (46, '192.168.2.46'), (47, '192.168.2.47'), (48, '192.168.2.48'), (49, '192.168.2.49'), (50, '192.168.2.50'), (51, '192.168.2.51'), (52, '192.168.2.52'), (53, '192.168.2.53'), (54, '192.168.2.54'), (55, '192.168.2.55'), (56, '192.168.2.56'), (57, '192.168.2.57'), (58, '192.168.2.58'), (59, '192.168.2.59'), (60, '192.168.2.60'), (61, '192.168.2.61'), (62, '192.168.2.62'), (63, '192.168.2.63'), (64, '192.168.2.64'), (65, '192.168.2.65'), (66, '192.168.2.66'), (67, '192.168.2.67'), (68, '192.168.2.68'), (69, '192.168.2.69'), (70, '192.168.2.70'), (71, '192.168.2.71'), (72, '192.168.2.72'), (73, '192.168.2.73'), (74, '192.168.2.74'), (75, '192.168.2.75'), (76, '192.168.2.76'), (77, '192.168.2.77'), (78, '192.168.2.78'), (79, '192.168.2.79'), (80, '192.168.2.80'), (81, '192.168.2.81'), (82, '192.168.2.82'), (83, '192.168.2.83'), (84, '192.168.2.84'), (85, '192.168.2.85'), (86, '192.168.2.86'), (87, '192.168.2.87'), (88, '192.168.2.88'), (89, '192.168.2.89'), (90, '192.168.2.90'), (91, '192.168.2.91'), (92, '192.168.2.92'), (93, '192.168.2.93'), (94, '192.168.2.94'), (95, '192.168.2.95'), (96, '192.168.2.96'), (97, '192.168.2.97'), (98, '192.168.2.98'), (99, '192.168.2.99'), (100, '192.168.2.100'), (101, '192.168.2.101'), (102, '192.168.2.102'), (103, '192.168.2.103'), (104, '192.168.2.104'), (105, '192.168.2.105'), (106, '192.168.2.106'), (107, '192.168.2.107'), (108, '192.168.2.108'), (109, '192.168.2.109'), (110, '192.168.2.110'), (111, '192.168.2.111'), (112, '192.168.2.112'), (113, '192.168.2.113'), (114, '192.168.2.114'), (115, '192.168.2.115'), (116, '192.168.2.116'), (117, '192.168.2.117'), (118, '192.168.2.118'), (119, '192.168.2.119'), (120, '192.168.2.120'), (121, '192.168.2.121'), (122, '192.168.2.122'), (123, '192.168.2.123'), (124, '192.168.2.124'), (125, '192.168.2.125'), (126, '192.168.2.126'), (127, '192.168.2.127'), (128, '192.168.2.128'), (129, '192.168.2.129'), (130, '192.168.2.130'), (131, '192.168.2.131'), (132, '192.168.2.132'), (133, '192.168.2.133'), (134, '192.168.2.134'), (135, '192.168.2.135'), (136, '192.168.2.136'), (137, '192.168.2.137'), (138, '192.168.2.138'), (139, '192.168.2.139'), (140, '192.168.2.140'), (141, '192.168.2.141'), (142, '192.168.2.142'), (143, '192.168.2.143'), (144, '192.168.2.144'), (145, '192.168.2.145'), (146, '192.168.2.146'), (147, '192.168.2.147'), (148, '192.168.2.148'), (149, '192.168.2.149'), (150, '192.168.2.150'), (151, '192.168.2.151'), (152, '192.168.2.152'), (153, '192.168.2.153'), (154, '192.168.2.154'), (155, '192.168.2.155'), (156, '192.168.2.156'), (157, '192.168.2.157'), (158, '192.168.2.158'), (159, '192.168.2.159'), (160, '192.168.2.160'), (161, '192.168.2.161'), (162, '192.168.2.162'), (163, '192.168.2.163'), (164, '192.168.2.164'), (165, '192.168.2.165'), (166, '192.168.2.166'), (167, '192.168.2.167'), (168, '192.168.2.168'), (169, '192.168.2.169'), (170, '192.168.2.170'), (171, '192.168.2.171'), (172, '192.168.2.172'), (173, '192.168.2.173'), (174, '192.168.2.174'), (175, '192.168.2.175'), (176, '192.168.2.176'), (177, '192.168.2.177'), (178, '192.168.2.178'), (179, '192.168.2.179'), (180, '192.168.2.180'), (181, '192.168.2.181'), (182, '192.168.2.182'), (183, '192.168.2.183'), (184, '192.168.2.184'), (185, '192.168.2.185'), (186, '192.168.2.186'), (187, '192.168.2.187'), (188, '192.168.2.188'), (189, '192.168.2.189'), (190, '192.168.2.190'), (191, '192.168.2.191'), (192, '192.168.2.192'), (193, '192.168.2.193'), (194, '192.168.2.194'), (195, '192.168.2.195'), (196, '192.168.2.196'), (197, '192.168.2.197'), (198, '192.168.2.198'), (199, '192.168.2.199'), (200, '192.168.2.200'), (201, '192.168.2.201'), (202, '192.168.2.202'), (203, '192.168.2.203'), (204, '192.168.2.204'), (205, '192.168.2.205'), (206, '192.168.2.206'), (207, '192.168.2.207'), (208, '192.168.2.208'), (209, '192.168.2.209'), (210, '192.168.2.210'), (211, '192.168.2.211'), (212, '192.168.2.212'), (213, '192.168.2.213'), (214, '192.168.2.214'), (215, '192.168.2.215'), (216, '192.168.2.216'), (217, '192.168.2.217'), (218, '192.168.2.218'), (219, '192.168.2.219'), (220, '192.168.2.220'), (221, '192.168.2.221'), (222, '192.168.2.222'), (223, '192.168.2.223'), (224, '192.168.2.224'), (225, '192.168.2.225'), (226, '192.168.2.226'), (227, '192.168.2.227'), (228, '192.168.2.228'), (229, '192.168.2.229'), (230, '192.168.2.230'), (231, '192.168.2.231'), (232, '192.168.2.232'), (233, '192.168.2.233'), (234, '192.168.2.234'), (235, '192.168.2.235'), (236, '192.168.2.236'), (237, '192.168.2.237'), (238, '192.168.2.238'), (239, '192.168.2.239'), (240, '192.168.2.240'), (241, '192.168.2.241'), (242, '192.168.2.242'), (243, '192.168.2.243'), (244, '192.168.2.244'), (245, '192.168.2.245'), (246, '192.168.2.246'), (247, '192.168.2.247'), (248, '192.168.2.248'), (249, '192.168.2.249'), (250, '192.168.2.250'), (251, '192.168.2.251'), (252, '192.168.2.252'), (253, '192.168.2.253'), (254, '192.168.2.254')], db_index=True, validators=[django.core.validators.MaxValueValidator(254)], verbose_name='IP')),
                ('mac', models.CharField(db_index=True, max_length=17, verbose_name='MAC')),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name='fecha de creacion')),
                ('ultima_actualizacion', models.DateTimeField(blank=True, editable=False, verbose_name='ultima actualizacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('equipo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.equipo')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('nivel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.nivel')),
                ('usuario', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.usuario')),
            ],
            options={
                'verbose_name': 'historical asignacion',
                'verbose_name_plural': 'historical asignaciones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AsignacionTemporalUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name='fecha de expiracion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.usuario')),
            ],
            options={
                'verbose_name': 'asignacion temporal del usuario',
                'verbose_name_plural': 'asignaciones temporales de los usuarios',
                'ordering': ['usuario', 'dominio'],
                'get_latest_by': 'fecha_creacion',
            },
        ),
        migrations.CreateModel(
            name='AsignacionTemporalDepartamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name='fecha de expiracion')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.departamento')),
            ],
            options={
                'verbose_name': 'asignacion temporal del departamento',
                'verbose_name_plural': 'asignaciones temporales por departamento',
                'ordering': ['departamento', 'dominio'],
                'get_latest_by': 'fecha_creacion',
            },
        ),
        migrations.CreateModel(
            name='Asignacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_equipo', models.CharField(blank=True, help_text='Nombre del equipo o Hostname. Ejemplo: PC1, MAC2, IMP3, SRV4, etc.', max_length=256, verbose_name='nombre del equipo')),
                ('tipo_conexion', models.PositiveSmallIntegerField(choices=[(0, 'Otro'), (1, 'Lan'), (2, 'Wlan')], default=1, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='tipo de conexion')),
                ('ip', models.PositiveSmallIntegerField(choices=[(1, '192.168.2.1'), (2, '192.168.2.2'), (3, '192.168.2.3'), (4, '192.168.2.4'), (5, '192.168.2.5'), (6, '192.168.2.6'), (7, '192.168.2.7'), (8, '192.168.2.8'), (9, '192.168.2.9'), (10, '192.168.2.10'), (11, '192.168.2.11'), (12, '192.168.2.12'), (13, '192.168.2.13'), (14, '192.168.2.14'), (15, '192.168.2.15'), (16, '192.168.2.16'), (17, '192.168.2.17'), (18, '192.168.2.18'), (19, '192.168.2.19'), (20, '192.168.2.20'), (21, '192.168.2.21'), (22, '192.168.2.22'), (23, '192.168.2.23'), (24, '192.168.2.24'), (25, '192.168.2.25'), (26, '192.168.2.26'), (27, '192.168.2.27'), (28, '192.168.2.28'), (29, '192.168.2.29'), (30, '192.168.2.30'), (31, '192.168.2.31'), (32, '192.168.2.32'), (33, '192.168.2.33'), (34, '192.168.2.34'), (35, '192.168.2.35'), (36, '192.168.2.36'), (37, '192.168.2.37'), (38, '192.168.2.38'), (39, '192.168.2.39'), (40, '192.168.2.40'), (41, '192.168.2.41'), (42, '192.168.2.42'), (43, '192.168.2.43'), (44, '192.168.2.44'), (45, '192.168.2.45'), (46, '192.168.2.46'), (47, '192.168.2.47'), (48, '192.168.2.48'), (49, '192.168.2.49'), (50, '192.168.2.50'), (51, '192.168.2.51'), (52, '192.168.2.52'), (53, '192.168.2.53'), (54, '192.168.2.54'), (55, '192.168.2.55'), (56, '192.168.2.56'), (57, '192.168.2.57'), (58, '192.168.2.58'), (59, '192.168.2.59'), (60, '192.168.2.60'), (61, '192.168.2.61'), (62, '192.168.2.62'), (63, '192.168.2.63'), (64, '192.168.2.64'), (65, '192.168.2.65'), (66, '192.168.2.66'), (67, '192.168.2.67'), (68, '192.168.2.68'), (69, '192.168.2.69'), (70, '192.168.2.70'), (71, '192.168.2.71'), (72, '192.168.2.72'), (73, '192.168.2.73'), (74, '192.168.2.74'), (75, '192.168.2.75'), (76, '192.168.2.76'), (77, '192.168.2.77'), (78, '192.168.2.78'), (79, '192.168.2.79'), (80, '192.168.2.80'), (81, '192.168.2.81'), (82, '192.168.2.82'), (83, '192.168.2.83'), (84, '192.168.2.84'), (85, '192.168.2.85'), (86, '192.168.2.86'), (87, '192.168.2.87'), (88, '192.168.2.88'), (89, '192.168.2.89'), (90, '192.168.2.90'), (91, '192.168.2.91'), (92, '192.168.2.92'), (93, '192.168.2.93'), (94, '192.168.2.94'), (95, '192.168.2.95'), (96, '192.168.2.96'), (97, '192.168.2.97'), (98, '192.168.2.98'), (99, '192.168.2.99'), (100, '192.168.2.100'), (101, '192.168.2.101'), (102, '192.168.2.102'), (103, '192.168.2.103'), (104, '192.168.2.104'), (105, '192.168.2.105'), (106, '192.168.2.106'), (107, '192.168.2.107'), (108, '192.168.2.108'), (109, '192.168.2.109'), (110, '192.168.2.110'), (111, '192.168.2.111'), (112, '192.168.2.112'), (113, '192.168.2.113'), (114, '192.168.2.114'), (115, '192.168.2.115'), (116, '192.168.2.116'), (117, '192.168.2.117'), (118, '192.168.2.118'), (119, '192.168.2.119'), (120, '192.168.2.120'), (121, '192.168.2.121'), (122, '192.168.2.122'), (123, '192.168.2.123'), (124, '192.168.2.124'), (125, '192.168.2.125'), (126, '192.168.2.126'), (127, '192.168.2.127'), (128, '192.168.2.128'), (129, '192.168.2.129'), (130, '192.168.2.130'), (131, '192.168.2.131'), (132, '192.168.2.132'), (133, '192.168.2.133'), (134, '192.168.2.134'), (135, '192.168.2.135'), (136, '192.168.2.136'), (137, '192.168.2.137'), (138, '192.168.2.138'), (139, '192.168.2.139'), (140, '192.168.2.140'), (141, '192.168.2.141'), (142, '192.168.2.142'), (143, '192.168.2.143'), (144, '192.168.2.144'), (145, '192.168.2.145'), (146, '192.168.2.146'), (147, '192.168.2.147'), (148, '192.168.2.148'), (149, '192.168.2.149'), (150, '192.168.2.150'), (151, '192.168.2.151'), (152, '192.168.2.152'), (153, '192.168.2.153'), (154, '192.168.2.154'), (155, '192.168.2.155'), (156, '192.168.2.156'), (157, '192.168.2.157'), (158, '192.168.2.158'), (159, '192.168.2.159'), (160, '192.168.2.160'), (161, '192.168.2.161'), (162, '192.168.2.162'), (163, '192.168.2.163'), (164, '192.168.2.164'), (165, '192.168.2.165'), (166, '192.168.2.166'), (167, '192.168.2.167'), (168, '192.168.2.168'), (169, '192.168.2.169'), (170, '192.168.2.170'), (171, '192.168.2.171'), (172, '192.168.2.172'), (173, '192.168.2.173'), (174, '192.168.2.174'), (175, '192.168.2.175'), (176, '192.168.2.176'), (177, '192.168.2.177'), (178, '192.168.2.178'), (179, '192.168.2.179'), (180, '192.168.2.180'), (181, '192.168.2.181'), (182, '192.168.2.182'), (183, '192.168.2.183'), (184, '192.168.2.184'), (185, '192.168.2.185'), (186, '192.168.2.186'), (187, '192.168.2.187'), (188, '192.168.2.188'), (189, '192.168.2.189'), (190, '192.168.2.190'), (191, '192.168.2.191'), (192, '192.168.2.192'), (193, '192.168.2.193'), (194, '192.168.2.194'), (195, '192.168.2.195'), (196, '192.168.2.196'), (197, '192.168.2.197'), (198, '192.168.2.198'), (199, '192.168.2.199'), (200, '192.168.2.200'), (201, '192.168.2.201'), (202, '192.168.2.202'), (203, '192.168.2.203'), (204, '192.168.2.204'), (205, '192.168.2.205'), (206, '192.168.2.206'), (207, '192.168.2.207'), (208, '192.168.2.208'), (209, '192.168.2.209'), (210, '192.168.2.210'), (211, '192.168.2.211'), (212, '192.168.2.212'), (213, '192.168.2.213'), (214, '192.168.2.214'), (215, '192.168.2.215'), (216, '192.168.2.216'), (217, '192.168.2.217'), (218, '192.168.2.218'), (219, '192.168.2.219'), (220, '192.168.2.220'), (221, '192.168.2.221'), (222, '192.168.2.222'), (223, '192.168.2.223'), (224, '192.168.2.224'), (225, '192.168.2.225'), (226, '192.168.2.226'), (227, '192.168.2.227'), (228, '192.168.2.228'), (229, '192.168.2.229'), (230, '192.168.2.230'), (231, '192.168.2.231'), (232, '192.168.2.232'), (233, '192.168.2.233'), (234, '192.168.2.234'), (235, '192.168.2.235'), (236, '192.168.2.236'), (237, '192.168.2.237'), (238, '192.168.2.238'), (239, '192.168.2.239'), (240, '192.168.2.240'), (241, '192.168.2.241'), (242, '192.168.2.242'), (243, '192.168.2.243'), (244, '192.168.2.244'), (245, '192.168.2.245'), (246, '192.168.2.246'), (247, '192.168.2.247'), (248, '192.168.2.248'), (249, '192.168.2.249'), (250, '192.168.2.250'), (251, '192.168.2.251'), (252, '192.168.2.252'), (253, '192.168.2.253'), (254, '192.168.2.254')], unique=True, validators=[django.core.validators.MaxValueValidator(254)], verbose_name='IP')),
                ('mac', models.CharField(max_length=17, unique=True, verbose_name='MAC')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creacion')),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='ultima actualizacion')),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.equipo')),
                ('nivel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.nivel')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.usuario')),
            ],
            options={
                'verbose_name': 'asignacion',
                'verbose_name_plural': 'asignaciones',
                'ordering': ['ip'],
                'get_latest_by': 'fecha_creacion',
            },
        ),
    ]
