# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2016-12-20 17:28
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asignacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_conexion', models.PositiveSmallIntegerField(choices=[(0, b'Otro'), (1, b'Lan'), (2, b'Wlan')], default=1, validators=[django.core.validators.MaxValueValidator(2)], verbose_name=b'tipo de conexion')),
                ('ip', models.PositiveSmallIntegerField(choices=[(1, b'192.168.2.1'), (2, b'192.168.2.2'), (3, b'192.168.2.3'), (4, b'192.168.2.4'), (5, b'192.168.2.5'), (6, b'192.168.2.6'), (7, b'192.168.2.7'), (8, b'192.168.2.8'), (9, b'192.168.2.9'), (10, b'192.168.2.10'), (11, b'192.168.2.11'), (12, b'192.168.2.12'), (13, b'192.168.2.13'), (14, b'192.168.2.14'), (15, b'192.168.2.15'), (16, b'192.168.2.16'), (17, b'192.168.2.17'), (18, b'192.168.2.18'), (19, b'192.168.2.19'), (20, b'192.168.2.20'), (21, b'192.168.2.21'), (22, b'192.168.2.22'), (23, b'192.168.2.23'), (24, b'192.168.2.24'), (25, b'192.168.2.25'), (26, b'192.168.2.26'), (27, b'192.168.2.27'), (28, b'192.168.2.28'), (29, b'192.168.2.29'), (30, b'192.168.2.30'), (31, b'192.168.2.31'), (32, b'192.168.2.32'), (33, b'192.168.2.33'), (34, b'192.168.2.34'), (35, b'192.168.2.35'), (36, b'192.168.2.36'), (37, b'192.168.2.37'), (38, b'192.168.2.38'), (39, b'192.168.2.39'), (40, b'192.168.2.40'), (41, b'192.168.2.41'), (42, b'192.168.2.42'), (43, b'192.168.2.43'), (44, b'192.168.2.44'), (45, b'192.168.2.45'), (46, b'192.168.2.46'), (47, b'192.168.2.47'), (48, b'192.168.2.48'), (49, b'192.168.2.49'), (50, b'192.168.2.50'), (51, b'192.168.2.51'), (52, b'192.168.2.52'), (53, b'192.168.2.53'), (54, b'192.168.2.54'), (55, b'192.168.2.55'), (56, b'192.168.2.56'), (57, b'192.168.2.57'), (58, b'192.168.2.58'), (59, b'192.168.2.59'), (60, b'192.168.2.60'), (61, b'192.168.2.61'), (62, b'192.168.2.62'), (63, b'192.168.2.63'), (64, b'192.168.2.64'), (65, b'192.168.2.65'), (66, b'192.168.2.66'), (67, b'192.168.2.67'), (68, b'192.168.2.68'), (69, b'192.168.2.69'), (70, b'192.168.2.70'), (71, b'192.168.2.71'), (72, b'192.168.2.72'), (73, b'192.168.2.73'), (74, b'192.168.2.74'), (75, b'192.168.2.75'), (76, b'192.168.2.76'), (77, b'192.168.2.77'), (78, b'192.168.2.78'), (79, b'192.168.2.79'), (80, b'192.168.2.80'), (81, b'192.168.2.81'), (82, b'192.168.2.82'), (83, b'192.168.2.83'), (84, b'192.168.2.84'), (85, b'192.168.2.85'), (86, b'192.168.2.86'), (87, b'192.168.2.87'), (88, b'192.168.2.88'), (89, b'192.168.2.89'), (90, b'192.168.2.90'), (91, b'192.168.2.91'), (92, b'192.168.2.92'), (93, b'192.168.2.93'), (94, b'192.168.2.94'), (95, b'192.168.2.95'), (96, b'192.168.2.96'), (97, b'192.168.2.97'), (98, b'192.168.2.98'), (99, b'192.168.2.99'), (100, b'192.168.2.100'), (101, b'192.168.2.101'), (102, b'192.168.2.102'), (103, b'192.168.2.103'), (104, b'192.168.2.104'), (105, b'192.168.2.105'), (106, b'192.168.2.106'), (107, b'192.168.2.107'), (108, b'192.168.2.108'), (109, b'192.168.2.109'), (110, b'192.168.2.110'), (111, b'192.168.2.111'), (112, b'192.168.2.112'), (113, b'192.168.2.113'), (114, b'192.168.2.114'), (115, b'192.168.2.115'), (116, b'192.168.2.116'), (117, b'192.168.2.117'), (118, b'192.168.2.118'), (119, b'192.168.2.119'), (120, b'192.168.2.120'), (121, b'192.168.2.121'), (122, b'192.168.2.122'), (123, b'192.168.2.123'), (124, b'192.168.2.124'), (125, b'192.168.2.125'), (126, b'192.168.2.126'), (127, b'192.168.2.127'), (128, b'192.168.2.128'), (129, b'192.168.2.129'), (130, b'192.168.2.130'), (131, b'192.168.2.131'), (132, b'192.168.2.132'), (133, b'192.168.2.133'), (134, b'192.168.2.134'), (135, b'192.168.2.135'), (136, b'192.168.2.136'), (137, b'192.168.2.137'), (138, b'192.168.2.138'), (139, b'192.168.2.139'), (140, b'192.168.2.140'), (141, b'192.168.2.141'), (142, b'192.168.2.142'), (143, b'192.168.2.143'), (144, b'192.168.2.144'), (145, b'192.168.2.145'), (146, b'192.168.2.146'), (147, b'192.168.2.147'), (148, b'192.168.2.148'), (149, b'192.168.2.149'), (150, b'192.168.2.150'), (151, b'192.168.2.151'), (152, b'192.168.2.152'), (153, b'192.168.2.153'), (154, b'192.168.2.154'), (155, b'192.168.2.155'), (156, b'192.168.2.156'), (157, b'192.168.2.157'), (158, b'192.168.2.158'), (159, b'192.168.2.159'), (160, b'192.168.2.160'), (161, b'192.168.2.161'), (162, b'192.168.2.162'), (163, b'192.168.2.163'), (164, b'192.168.2.164'), (165, b'192.168.2.165'), (166, b'192.168.2.166'), (167, b'192.168.2.167'), (168, b'192.168.2.168'), (169, b'192.168.2.169'), (170, b'192.168.2.170'), (171, b'192.168.2.171'), (172, b'192.168.2.172'), (173, b'192.168.2.173'), (174, b'192.168.2.174'), (175, b'192.168.2.175'), (176, b'192.168.2.176'), (177, b'192.168.2.177'), (178, b'192.168.2.178'), (179, b'192.168.2.179'), (180, b'192.168.2.180'), (181, b'192.168.2.181'), (182, b'192.168.2.182'), (183, b'192.168.2.183'), (184, b'192.168.2.184'), (185, b'192.168.2.185'), (186, b'192.168.2.186'), (187, b'192.168.2.187'), (188, b'192.168.2.188'), (189, b'192.168.2.189'), (190, b'192.168.2.190'), (191, b'192.168.2.191'), (192, b'192.168.2.192'), (193, b'192.168.2.193'), (194, b'192.168.2.194'), (195, b'192.168.2.195'), (196, b'192.168.2.196'), (197, b'192.168.2.197'), (198, b'192.168.2.198'), (199, b'192.168.2.199'), (200, b'192.168.2.200'), (201, b'192.168.2.201'), (202, b'192.168.2.202'), (203, b'192.168.2.203'), (204, b'192.168.2.204'), (205, b'192.168.2.205'), (206, b'192.168.2.206'), (207, b'192.168.2.207'), (208, b'192.168.2.208'), (209, b'192.168.2.209'), (210, b'192.168.2.210'), (211, b'192.168.2.211'), (212, b'192.168.2.212'), (213, b'192.168.2.213'), (214, b'192.168.2.214'), (215, b'192.168.2.215'), (216, b'192.168.2.216'), (217, b'192.168.2.217'), (218, b'192.168.2.218'), (219, b'192.168.2.219'), (220, b'192.168.2.220'), (221, b'192.168.2.221'), (222, b'192.168.2.222'), (223, b'192.168.2.223'), (224, b'192.168.2.224'), (225, b'192.168.2.225'), (226, b'192.168.2.226'), (227, b'192.168.2.227'), (228, b'192.168.2.228'), (229, b'192.168.2.229'), (230, b'192.168.2.230'), (231, b'192.168.2.231'), (232, b'192.168.2.232'), (233, b'192.168.2.233'), (234, b'192.168.2.234'), (235, b'192.168.2.235'), (236, b'192.168.2.236'), (237, b'192.168.2.237'), (238, b'192.168.2.238'), (239, b'192.168.2.239'), (240, b'192.168.2.240'), (241, b'192.168.2.241'), (242, b'192.168.2.242'), (243, b'192.168.2.243'), (244, b'192.168.2.244'), (245, b'192.168.2.245'), (246, b'192.168.2.246'), (247, b'192.168.2.247'), (248, b'192.168.2.248'), (249, b'192.168.2.249'), (250, b'192.168.2.250'), (251, b'192.168.2.251'), (252, b'192.168.2.252'), (253, b'192.168.2.253'), (254, b'192.168.2.254')], unique=True, validators=[django.core.validators.MaxValueValidator(254)], verbose_name=b'IP')),
                ('mac', models.CharField(max_length=17, unique=True, verbose_name=b'MAC')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name=b'fecha de creacion')),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name=b'ultima actualizacion')),
            ],
            options={
                'ordering': ['ip'],
                'get_latest_by': 'fecha_creacion',
                'verbose_name': 'asignacion',
                'verbose_name_plural': 'asignaciones',
            },
        ),
        migrations.CreateModel(
            name='AsignacionTemporalDepartamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name=b'fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name=b'fecha de expiracion')),
            ],
            options={
                'ordering': ['departamento', 'dominio'],
                'get_latest_by': 'fecha_creacion',
                'verbose_name': 'asignacion temporal del departamento',
                'verbose_name_plural': 'asignaciones temporales por departamento',
            },
        ),
        migrations.CreateModel(
            name='AsignacionTemporalUsuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name=b'fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name=b'fecha de expiracion')),
            ],
            options={
                'ordering': ['usuario', 'dominio'],
                'get_latest_by': 'fecha_creacion',
                'verbose_name': 'asignacion temporal del usuario',
                'verbose_name_plural': 'asignaciones temporales de los usuarios',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('descripcion', models.TextField()),
                ('ruta', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'categoria',
                'verbose_name_plural': 'categorias',
            },
        ),
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('valor', models.CharField(max_length=256)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name=b'ultima actualizacion')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'configuracion',
                'verbose_name_plural': 'configuraciones',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'departamento',
                'verbose_name_plural': 'departamentos',
            },
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'equipo',
                'verbose_name_plural': 'equipos',
            },
        ),
        migrations.CreateModel(
            name='ExtensionArchivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(max_length=20)),
                ('actualizaciones', models.BooleanField(default=False, help_text='Se\xf1ala si la extension del archivo se debe permitir durante el modo de actualizaci\xf3n', verbose_name=b'actualizaciones')),
            ],
            options={
                'ordering': ['extension'],
                'verbose_name': 'extension de archivo',
                'verbose_name_plural': 'extensiones de archivos',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAsignacion',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo_conexion', models.PositiveSmallIntegerField(choices=[(0, b'Otro'), (1, b'Lan'), (2, b'Wlan')], default=1, validators=[django.core.validators.MaxValueValidator(2)], verbose_name=b'tipo de conexion')),
                ('ip', models.PositiveSmallIntegerField(choices=[(1, b'192.168.2.1'), (2, b'192.168.2.2'), (3, b'192.168.2.3'), (4, b'192.168.2.4'), (5, b'192.168.2.5'), (6, b'192.168.2.6'), (7, b'192.168.2.7'), (8, b'192.168.2.8'), (9, b'192.168.2.9'), (10, b'192.168.2.10'), (11, b'192.168.2.11'), (12, b'192.168.2.12'), (13, b'192.168.2.13'), (14, b'192.168.2.14'), (15, b'192.168.2.15'), (16, b'192.168.2.16'), (17, b'192.168.2.17'), (18, b'192.168.2.18'), (19, b'192.168.2.19'), (20, b'192.168.2.20'), (21, b'192.168.2.21'), (22, b'192.168.2.22'), (23, b'192.168.2.23'), (24, b'192.168.2.24'), (25, b'192.168.2.25'), (26, b'192.168.2.26'), (27, b'192.168.2.27'), (28, b'192.168.2.28'), (29, b'192.168.2.29'), (30, b'192.168.2.30'), (31, b'192.168.2.31'), (32, b'192.168.2.32'), (33, b'192.168.2.33'), (34, b'192.168.2.34'), (35, b'192.168.2.35'), (36, b'192.168.2.36'), (37, b'192.168.2.37'), (38, b'192.168.2.38'), (39, b'192.168.2.39'), (40, b'192.168.2.40'), (41, b'192.168.2.41'), (42, b'192.168.2.42'), (43, b'192.168.2.43'), (44, b'192.168.2.44'), (45, b'192.168.2.45'), (46, b'192.168.2.46'), (47, b'192.168.2.47'), (48, b'192.168.2.48'), (49, b'192.168.2.49'), (50, b'192.168.2.50'), (51, b'192.168.2.51'), (52, b'192.168.2.52'), (53, b'192.168.2.53'), (54, b'192.168.2.54'), (55, b'192.168.2.55'), (56, b'192.168.2.56'), (57, b'192.168.2.57'), (58, b'192.168.2.58'), (59, b'192.168.2.59'), (60, b'192.168.2.60'), (61, b'192.168.2.61'), (62, b'192.168.2.62'), (63, b'192.168.2.63'), (64, b'192.168.2.64'), (65, b'192.168.2.65'), (66, b'192.168.2.66'), (67, b'192.168.2.67'), (68, b'192.168.2.68'), (69, b'192.168.2.69'), (70, b'192.168.2.70'), (71, b'192.168.2.71'), (72, b'192.168.2.72'), (73, b'192.168.2.73'), (74, b'192.168.2.74'), (75, b'192.168.2.75'), (76, b'192.168.2.76'), (77, b'192.168.2.77'), (78, b'192.168.2.78'), (79, b'192.168.2.79'), (80, b'192.168.2.80'), (81, b'192.168.2.81'), (82, b'192.168.2.82'), (83, b'192.168.2.83'), (84, b'192.168.2.84'), (85, b'192.168.2.85'), (86, b'192.168.2.86'), (87, b'192.168.2.87'), (88, b'192.168.2.88'), (89, b'192.168.2.89'), (90, b'192.168.2.90'), (91, b'192.168.2.91'), (92, b'192.168.2.92'), (93, b'192.168.2.93'), (94, b'192.168.2.94'), (95, b'192.168.2.95'), (96, b'192.168.2.96'), (97, b'192.168.2.97'), (98, b'192.168.2.98'), (99, b'192.168.2.99'), (100, b'192.168.2.100'), (101, b'192.168.2.101'), (102, b'192.168.2.102'), (103, b'192.168.2.103'), (104, b'192.168.2.104'), (105, b'192.168.2.105'), (106, b'192.168.2.106'), (107, b'192.168.2.107'), (108, b'192.168.2.108'), (109, b'192.168.2.109'), (110, b'192.168.2.110'), (111, b'192.168.2.111'), (112, b'192.168.2.112'), (113, b'192.168.2.113'), (114, b'192.168.2.114'), (115, b'192.168.2.115'), (116, b'192.168.2.116'), (117, b'192.168.2.117'), (118, b'192.168.2.118'), (119, b'192.168.2.119'), (120, b'192.168.2.120'), (121, b'192.168.2.121'), (122, b'192.168.2.122'), (123, b'192.168.2.123'), (124, b'192.168.2.124'), (125, b'192.168.2.125'), (126, b'192.168.2.126'), (127, b'192.168.2.127'), (128, b'192.168.2.128'), (129, b'192.168.2.129'), (130, b'192.168.2.130'), (131, b'192.168.2.131'), (132, b'192.168.2.132'), (133, b'192.168.2.133'), (134, b'192.168.2.134'), (135, b'192.168.2.135'), (136, b'192.168.2.136'), (137, b'192.168.2.137'), (138, b'192.168.2.138'), (139, b'192.168.2.139'), (140, b'192.168.2.140'), (141, b'192.168.2.141'), (142, b'192.168.2.142'), (143, b'192.168.2.143'), (144, b'192.168.2.144'), (145, b'192.168.2.145'), (146, b'192.168.2.146'), (147, b'192.168.2.147'), (148, b'192.168.2.148'), (149, b'192.168.2.149'), (150, b'192.168.2.150'), (151, b'192.168.2.151'), (152, b'192.168.2.152'), (153, b'192.168.2.153'), (154, b'192.168.2.154'), (155, b'192.168.2.155'), (156, b'192.168.2.156'), (157, b'192.168.2.157'), (158, b'192.168.2.158'), (159, b'192.168.2.159'), (160, b'192.168.2.160'), (161, b'192.168.2.161'), (162, b'192.168.2.162'), (163, b'192.168.2.163'), (164, b'192.168.2.164'), (165, b'192.168.2.165'), (166, b'192.168.2.166'), (167, b'192.168.2.167'), (168, b'192.168.2.168'), (169, b'192.168.2.169'), (170, b'192.168.2.170'), (171, b'192.168.2.171'), (172, b'192.168.2.172'), (173, b'192.168.2.173'), (174, b'192.168.2.174'), (175, b'192.168.2.175'), (176, b'192.168.2.176'), (177, b'192.168.2.177'), (178, b'192.168.2.178'), (179, b'192.168.2.179'), (180, b'192.168.2.180'), (181, b'192.168.2.181'), (182, b'192.168.2.182'), (183, b'192.168.2.183'), (184, b'192.168.2.184'), (185, b'192.168.2.185'), (186, b'192.168.2.186'), (187, b'192.168.2.187'), (188, b'192.168.2.188'), (189, b'192.168.2.189'), (190, b'192.168.2.190'), (191, b'192.168.2.191'), (192, b'192.168.2.192'), (193, b'192.168.2.193'), (194, b'192.168.2.194'), (195, b'192.168.2.195'), (196, b'192.168.2.196'), (197, b'192.168.2.197'), (198, b'192.168.2.198'), (199, b'192.168.2.199'), (200, b'192.168.2.200'), (201, b'192.168.2.201'), (202, b'192.168.2.202'), (203, b'192.168.2.203'), (204, b'192.168.2.204'), (205, b'192.168.2.205'), (206, b'192.168.2.206'), (207, b'192.168.2.207'), (208, b'192.168.2.208'), (209, b'192.168.2.209'), (210, b'192.168.2.210'), (211, b'192.168.2.211'), (212, b'192.168.2.212'), (213, b'192.168.2.213'), (214, b'192.168.2.214'), (215, b'192.168.2.215'), (216, b'192.168.2.216'), (217, b'192.168.2.217'), (218, b'192.168.2.218'), (219, b'192.168.2.219'), (220, b'192.168.2.220'), (221, b'192.168.2.221'), (222, b'192.168.2.222'), (223, b'192.168.2.223'), (224, b'192.168.2.224'), (225, b'192.168.2.225'), (226, b'192.168.2.226'), (227, b'192.168.2.227'), (228, b'192.168.2.228'), (229, b'192.168.2.229'), (230, b'192.168.2.230'), (231, b'192.168.2.231'), (232, b'192.168.2.232'), (233, b'192.168.2.233'), (234, b'192.168.2.234'), (235, b'192.168.2.235'), (236, b'192.168.2.236'), (237, b'192.168.2.237'), (238, b'192.168.2.238'), (239, b'192.168.2.239'), (240, b'192.168.2.240'), (241, b'192.168.2.241'), (242, b'192.168.2.242'), (243, b'192.168.2.243'), (244, b'192.168.2.244'), (245, b'192.168.2.245'), (246, b'192.168.2.246'), (247, b'192.168.2.247'), (248, b'192.168.2.248'), (249, b'192.168.2.249'), (250, b'192.168.2.250'), (251, b'192.168.2.251'), (252, b'192.168.2.252'), (253, b'192.168.2.253'), (254, b'192.168.2.254')], db_index=True, validators=[django.core.validators.MaxValueValidator(254)], verbose_name=b'IP')),
                ('mac', models.CharField(db_index=True, max_length=17, verbose_name=b'MAC')),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name=b'fecha de creacion')),
                ('ultima_actualizacion', models.DateTimeField(blank=True, editable=False, verbose_name=b'ultima actualizacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('equipo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Equipo')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical asignacion',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAsignacionTemporalDepartamento',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name=b'fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name=b'fecha de expiracion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('departamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Departamento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical asignacion temporal del departamento',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAsignacionTemporalUsuario',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name=b'fecha de creacion')),
                ('fecha_expiracion', models.DateField(verbose_name=b'fecha de expiracion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical asignacion temporal del usuario',
            },
        ),
        migrations.CreateModel(
            name='HistoricalConfiguracion',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('valor', models.CharField(max_length=256)),
                ('ultima_actualizacion', models.DateTimeField(blank=True, editable=False, verbose_name=b'ultima actualizacion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical configuracion',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDepartamento',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical departamento',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEquipo',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical equipo',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNivel',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('filtrar', models.BooleanField(default=True, help_text='Se\xf1ala si el nivel debe ser procesado por el filtro de sitios web.', verbose_name=b'filtrar')),
                ('sinaccesoainternet', models.BooleanField(default=False, help_text='Se\xf1ala si el nivel no tiene permitido acceder a ningun sitio de internet', verbose_name=b'sin acceso a internet')),
                ('actualizaciones', models.BooleanField(default=True, help_text='Se\xf1ala si el nivel puede entrar en modo de actualizaci\xf3n', verbose_name=b'actualizaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical nivel',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSitioPermanentementeDenegado',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical sitio permanentemente denegado',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSitioPermanentementePermitido',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical sitio permanentemente permitido',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUsuario',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('activo', models.BooleanField(default=True)),
                ('comentario', models.TextField(blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('departamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Departamento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical usuario',
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('filtrar', models.BooleanField(default=True, help_text='Se\xf1ala si el nivel debe ser procesado por el filtro de sitios web.', verbose_name=b'filtrar')),
                ('sinaccesoainternet', models.BooleanField(default=False, help_text='Se\xf1ala si el nivel no tiene permitido acceder a ningun sitio de internet', verbose_name=b'sin acceso a internet')),
                ('actualizaciones', models.BooleanField(default=True, help_text='Se\xf1ala si el nivel puede entrar en modo de actualizaci\xf3n', verbose_name=b'actualizaciones')),
                ('categorias', models.ManyToManyField(blank=True, to='Administrador.Categoria', verbose_name=b'categorias')),
                ('extensiones_archivos', models.ManyToManyField(blank=True, to='Administrador.ExtensionArchivo', verbose_name=b'extensiones de archivos')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'nivel',
                'verbose_name_plural': 'niveles',
            },
        ),
        migrations.CreateModel(
            name='Sitio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Categoria')),
            ],
            options={
                'ordering': ['dominio'],
                'verbose_name': 'sitio',
                'verbose_name_plural': 'sitios',
            },
        ),
        migrations.CreateModel(
            name='SitioPermanentementeDenegado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['dominio'],
                'verbose_name': 'sitio permanentemente denegado',
                'verbose_name_plural': 'sitios permanentemente denegados',
            },
        ),
        migrations.CreateModel(
            name='SitioPermanentementePermitido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dominio', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['dominio'],
                'verbose_name': 'sitio permanentemente permitido',
                'verbose_name_plural': 'sitios permanentemente permitidos',
            },
        ),
        migrations.CreateModel(
            name='TipoMime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mime', models.CharField(max_length=256, verbose_name=b'MIME')),
                ('actualizaciones', models.BooleanField(default=False, help_text='Se\xf1ala si el tipo de MIME se debe permitir durante el modo actualizaci\xf3n', verbose_name=b'actualizaciones')),
            ],
            options={
                'ordering': ['mime'],
                'verbose_name': 'tipo de MIME',
                'verbose_name_plural': 'tipos de MIME',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=256)),
                ('activo', models.BooleanField(default=True)),
                ('comentario', models.TextField(blank=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Departamento')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
            },
        ),
        migrations.AddField(
            model_name='nivel',
            name='tipos_mime',
            field=models.ManyToManyField(blank=True, to='Administrador.TipoMime', verbose_name=b'tipos de MIME'),
        ),
        migrations.AddField(
            model_name='historicalasignaciontemporalusuario',
            name='usuario',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Usuario'),
        ),
        migrations.AddField(
            model_name='historicalasignacion',
            name='nivel',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Nivel'),
        ),
        migrations.AddField(
            model_name='historicalasignacion',
            name='usuario',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Administrador.Usuario'),
        ),
        migrations.AddField(
            model_name='asignaciontemporalusuario',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Usuario'),
        ),
        migrations.AddField(
            model_name='asignaciontemporaldepartamento',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Departamento'),
        ),
        migrations.AddField(
            model_name='asignacion',
            name='equipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Equipo'),
        ),
        migrations.AddField(
            model_name='asignacion',
            name='nivel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Nivel'),
        ),
        migrations.AddField(
            model_name='asignacion',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Administrador.Usuario'),
        ),
    ]
